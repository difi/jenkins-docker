#!/usr/bin/env bash

image() {
    local name=$1
    local registry=$2
    local version=$3
    echo -n "${registry:+${registry}/}${name}${version:+:${version}}"
}

build() {
    local name=$1
    local registry=$2
    local version=$3
    image=$(image ${name} ${registry} ${version})
    docker build -t ${image} docker/${name} || return 1
}

buildJenkins() {
    local name=$1
    local registry=$2
    local version=$3
    image=$(image ${name} ${registry} ${version})
    pluginsImage=$(image jenkins-plugins ${registry} ${version})
    docker build --build-arg PLUGINS_IMAGE=${pluginsImage} -t ${image} docker/${name} || return 1
}

buildWithArtifact() {
    local name=$1
    local registry=$2
    local version=$3
    cp ${name}/target/${name}.jar docker/${name}/${name}.jar
    build ${name} ${registry} ${version} || return 1
    rm docker/${name}/${name}.jar
}

buildAll() {
    [[ $# -le 2 ]] || { >&2 echo "Usage: $0 [REGISTRY [VERSION]]"; return 1; }
    local registry=$1
    local version=$2
    build jenkins-plugins ${registry} ${version} || return 1
    build jenkins-slave ${registry} ${version} || return 1
    buildJenkins jenkins ${registry} ${version} || return 1
    buildWithArtifact polling-agent ${registry} ${version} || return 1
    build jira-mock ${registry} ${version} || return 1
    build crucible-mock ${registry} ${version} || return 1
    build git ${registry} ${version} || return 1
    build verification ${registry} ${version} || return 1
}

buildAll "${@}" || exit 1